@model WebLibrary.ViewModels.BookVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var authorId = 0;
    var genreId = 0;
    if (Model != null) {
        authorId = (int)Model.AuthorsId;
        genreId = (int)Model.GenresId;
    }
}
<script>
    $(document).ready(function () {
        //--------Получение авторов и жанров из Index (No ViewBag - No SelectList!)------------
        var authors = JSON.parse(localStorage.getItem("authors"));
        var genres = JSON.parse(localStorage.getItem("genres"));
        console.log(authors)
        if (Array.isArray(authors) && Array.isArray(genres)) {
            $(authors).each(function (i, item) {
                var option = $("<option></option>")
                $(option).val(item["Id"]).html(item.LastName)    //=["LastName"]
                $('#AuthorsId').append(option)
            })
            $(genres).each(function (i, item) {
                var option = $("<option></option>")
                $(option).val(item["Id"]).html(item["Name"])
                $('#GenresId').append(option)
            })
        }
        else console.log("Sorry localStorage is empty!");

        //-------при Edit -> установ. select в знач. полей книги---------
        if (($('#headEdit').attr('data-type')) != undefined) {
            //console.log($('#headEdit').attr('data-type'));

            $('#AuthorsId').val(@authorId);
            $('#GenresId').val(@genreId);
        }

        //-------------Upload Files (+ антидребезг отправки)---------------------------
        var myForm = document.forms[0];
        $('input[type=submit').on('click', function (e) {
            $(this).attr("disabled", "disabled");
            $(myForm).triggerHandler('submit');
        });
        $(myForm).on('submit', function (e) {
            var files = document.getElementById('customFile').files;
            console.log(files)
            if (window.FormData !== undefined) {
                var data = new FormData(document.forms[0]);
                console.log(data)
                for (var x = 0; x < files.length; x++) {
                    data.append("file" + x, files[x]);
                }
                $.ajax({
                    type: "POST",
                    url: "/Book/Create",
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (result) {
                        alert(result); //"Данные записаны!"
                        $(location).attr('href', '/Book/Index');
                    },
                    error: function (xhr, status) {
                        alert(status);
                        $('input[type=submit').attr("disabled", "disabled");
                    }
                });
            } else {
                alert("Браузер не поддерживает загрузку файлов HTML5!");
            }
        });

    })
</script>

@{
    if (Model == null) {
        <h2 id="headCreate" data-type="create">Create</h2>
    }
    else {
        <h2 id="headEdit" data-type="edit" data-num1="authorEmptyId" data-num2="genreEmptyId">Edit</h2>
    }
}
@using (Html.BeginForm("Create", "Book", FormMethod.Post, new { enctype = "multypart/form-data" })) {
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Books</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @{
            if (Model != null) {
                @Html.HiddenFor(m => m.Id)
            }

        }
        <div style="display:flex">
            <div style="width:8%; height:10px;"></div>
            <div class="custom-file">
                <input type="file" class="custom-file-input col-md-auto" name="upload" accept="image/jpeg" id="customFile">
                <label class="custom-file-label" for="customFile">Choose file</label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorsId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="AuthorsId" name="AuthorsId"></select>
                @Html.ValidationMessageFor(model => model.AuthorsId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GenresId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="GenresId" name="GenresId"></select>
                @Html.ValidationMessageFor(model => model.GenresId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Pages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pages, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pages, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
