@using WebLibrary.Utils
@model List<Books>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Users> list = ViewBag.UsersReadThisBook;
}
<script>
    $(document).ready(function () {
            //----------2)клик по строке------------
        $('.row').on("click", function (e) {    //работ.
            e.stopPropagation();
            var id = $(this).children(':first').text();
            $.ajax({
                url: '/Book/UsersReadThisBook',
                method: 'GET',
                data: { id: id },
                success: function (data) {
                    $('#myResult').html(data)
                },
                error: function (e) {
                    console.log("error")
                }
            });
                //--------3)клик по ссылке--------
            @*$('.read').on("click", function (e) {
                var id = $(this).parent().parent().children(':first').text();
                e.preventDefault();
               $('#myResult').load('@Url.Action("_UsersReadThisBook/", "Book")?id='+id)*@
        });
        //------------No SelectList! -------------------------------
        $('#createBookLink').on('click', function (e) {
            e.preventDefault();
            console.log("Create Book!")
            var data;
            $.ajax({
                dataType: "json",
                method: "GET",
                url: "/Book/PreCreate",
                data: data,
                success: function (data) {
                    var result = JSON.parse(data);
                    $(result).each(function (i, item) {
                        if (item["FirstName"] != undefined) {
                            var author = new Author(item["Id"], item["FirstName"], item["LastName"])
                            authors.push(author)
                        }
                        else if (item["Name"] != undefined) {
                            var genre = new Genre(item["Id"], item["Name"])
                            genres.push(genre)
                        }
                    })
                    //console.log(genres)
                    localStorage.clear();
                    localStorage.setItem("authors", JSON.stringify(authors));
                    localStorage.setItem("genres", JSON.stringify(genres));
                    $(location).attr('href', '/Book/Create')    //переход (остаток кода там)
                },
                error: function (e, msg) {
                    alert(msg);
                }
            })

        });
        var authors = []
        var genres = []
        class Author {
            constructor(Id, FirstName, LastName) {
                this.Id = Id, this.FirstName = FirstName, this.LastName = LastName
            }
        }
        class Genre {
            constructor(Id, Name) {
                this.Id = Id, this.Name = Name
            }
        }
    })
</script>


<h2>Книги</h2>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Индекс</th>
            <th>Название</th>
            <th>Жанр</th>
            <th>Автор</th>
            <th>Цена</th>
            <th>Количество страниц</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="row">
                <td>@item.Id</td>
                <td>@item.Title</td>
                <td>@item.Genres.Name</td>
                <td>@item.Authors.LastName</td>
                <td>@item.Price</td>
                <td>@item.Pages</td>
                @*<td><a href="#" class="read">Прочитавшие</a></td>*@
                <td>|</td>
                <td>@Html.ActionLink("Редактировать", "Edit", new { id = item.Id })
                <td>|</td>
                <td>@Html.ActionLink("Удалить", "Delete", new { id = item.Id })</td>
            </tr>

        }
    </tbody>
</table>

@*@Html.CreateTableList(Model, ".table table-striped")*@
<br />
<div id="myResult"></div>

<b>@Html.ActionLink("Добавить книгу", "PreCreate", null, new { id = "createBookLink"})</b>
